{"version":3,"file":"static/js/209.ba0d47ed.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/utils.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/process.mjs","../node_modules/framer-motion/dist/es/utils/warn-once.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/hey-listen/dist/hey-listen.es.js","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * If we have optimised appear animations to handoff from, trigger animateChanges\n     * from a synchronous useLayoutEffect to ensure there's no flash of incorrectly\n     * styled component in the event of a hydration error.\n     */\n    useIsomorphicLayoutEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Browser-safe usage of process\n */\nconst defaultEnvironment = \"production\";\nconst env = typeof process === \"undefined\" || process.env === undefined\n    ? defaultEnvironment\n    : process.env.NODE_ENV || defaultEnvironment;\n\nexport { env };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.10.3\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation) {\n            this.stopAnimation();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    const origin = keyframes[0];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframes.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restSpeed = 2, restDelta = 0.01, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(target - origin) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes.length > 2 ? \"keyframes\" : type];\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls.stop();\n        },\n        sample: (t) => {\n            return animation.next(Math.max(0, t));\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    let { keyframes, duration = 0.3, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        const sampleAnimation = animate(options);\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        let t = 0;\n        while (!state.done) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return () => {\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        const { currentTime } = animation;\n        if (currentTime) {\n            const sampleAnimation = animate(options);\n            value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n        }\n        sync.update(() => animation.cancel());\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return () => { };\n    };\n    return elapsed ? delay(setValue, -elapsed) : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\nimport { supports } from './waapi/supports.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            const animation = inertia(options);\n            return () => animation.stop();\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        const canAccelerateAnimation = supports.waapi() &&\n            acceleratedValues.has(valueName) &&\n            !options.repeatDelay &&\n            options.repeatType !== \"mirror\" &&\n            options.damping !== 0 &&\n            visualElement &&\n            element instanceof HTMLElement &&\n            !visualElement.getProps().onUpdate;\n        if (canAccelerateAnimation) {\n            /**\n             * If this animation is capable of being run via WAAPI, then do so.\n             */\n            return createAcceleratedAnimation(value, valueName, options);\n        }\n        else {\n            /**\n             * Otherwise, fall back to the main thread.\n             */\n            const animation = animate(options);\n            return () => animation.stop();\n        }\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { handoffOptimizedAppearAnimation } from '../../animation/optimized-appear/handoff.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n                MotionAppearAnimations.delete(animationId);\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.10.3\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.10.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","undefined","blockInitialAnimation","initial","render","animationState","animateChanges","notify","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","_React__default$Compo","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_this$props","this","setProps","children","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","_objectSpread","layoutId","useLayoutId","projectionId","lazyStrictMode","initialLayoutGroupConfig","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","custom","length","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","transformIsDefault","_ref2$enableHardwareA","enableHardwareAcceleration","_ref2$allowTransformN","allowTransformNone","transformString","sort","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_objectWithoutProperties","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","point","changedTouches","pointFromMouse","extractEventInfo","wrapHandler","eventHandler","listener","button","supportsPointerEvents","window","onpointerdown","supportsTouchEvents","ontouchstart","supportsMouseEvents","onmousedown","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","combineFunctions","pipe","_len","transformers","_key","reduce","env","warned","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","_ref2$amount","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","_ref3","_ref3$fallback","fallback","message","console","warn","add","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","_ref$viewport","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","whileFocus","Focus","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","i","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","cancel","index","splice","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","_this","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","isNaN","owner","subscription","on","eventManagers","clear","passiveEffect","_this2","stop","Promise","resolve","stopAnimation","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_slicedToArray","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","_toConsumableArray","map","numbers","tokenised","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","from","isWillChangeMotionValue","appearStoreId","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","_definition","keyframes","keyframeValues","_ref$ease","times","_ref$duration","duration","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","_ref$restSpeed","restSpeed","_ref$restDelta","restDelta","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","_ref$keyframes","_ref$power","power","_ref$timeConstant","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","update","passTimestamp","driverControls","latest","interpolateFromNumber","_ref2$driver","driver","_ref2$elapsed","_ref2$repeat","repeat","repeatMax","_ref2$repeatType","repeatType","_ref2$repeatDelay","repeatDelay","_ref2$autoplay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","_ref2$type","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","delay","reverseElapsed","hasRepeatDelayElapsed","sample","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","createAcceleratedAnimation","valueName","_options$duration","_options$elapsed","sampleAnimation","pregeneratedKeyframes","_element$animate","_ref$delay","_ref$repeat","_ref$repeatType","iterations","direction","animateStyle","onfinish","currentTime","setWithVelocity","timeout","checkElapsed","read","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","featureTests","waapi","Element","results","supports","_loop","acceleratedValues","createMotionValueAnimation","valueTransition","_transition$elapsed","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","currentAnimation","_ref$bounceStiffness","bounceStiffness","_ref$bounceDamping","bounceDamping","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","boundary","heading","inertia","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","valueKey","getDefaultTransition","HTMLElement","animateVariant","variant","_ref$transition","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animations","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","_ref4","_ref4$delay","_visualElement$makeTa","_visualElement$makeTa2","willChange","animationTypeState","getState","_ref5","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","shouldReduceMotion","appearId","MotionAppearAnimations","animationId","handoffOptimizedAppearAnimation","remove","sortNodePosition","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","_usePresence","_usePresence2","safeToRemove","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this3","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","maxDepth","getVariableValue","depth","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","token","getComputedStyle","getPropertyValue","BoundingBoxDimension","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","_objectDestructuringEmpty","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","_c","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","_featureDefinitions$n","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","getClosestVariantNode","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_a2","args","DOMVisualElement","_VisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","_get","_getPrototypeOf","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","prevProps","_this$props2","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_d","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","elementId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","_this$options3","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","_this$options4","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}