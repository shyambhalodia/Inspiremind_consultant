{"version":3,"file":"static/js/405.64ff22af.chunk.js","mappings":"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","sources":["components/auth/signup/OtpVerification.jsx","pages/auth/signup/OtpVerify.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FormHelperText from \"@mui/material/FormHelperText\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport { get, isEmpty } from \"lodash\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useGoogleReCaptcha } from \"react-google-recaptcha-v3\";\r\nimport OtpInput from \"react-otp-input\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport {\r\n  setAuthToken,\r\n  setIsLoggedIn,\r\n} from \"../../../store/slice/auth/authentication/authSlice\";\r\nimport {\r\n  postOtpVerification,\r\n  postResendOtp,\r\n} from \"../../../store/slice/auth/signup/otpVerificationSlice\";\r\nimport { getUserData } from \"../../../store/slice/auth/signup/signupSlice\";\r\nimport ComponentStyle from \"../../../styles/ComponentStyle.module.css\";\r\nimport { expireTime } from \"../../hooks/cookie\";\r\nimport translate from \"../../hooks/translate\";\r\n\r\nconst OtpVerification = () => {\r\n  const [otpCode, setOtpCode] = useState(\"\");\r\n  const [erorrAlert, setErorrAlert] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const { state } = useLocation();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [, setCookie] = useCookies();\r\n  const { executeRecaptcha } = useGoogleReCaptcha();\r\n\r\n  const userDetails = useSelector(getUserData);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      get(state, \"isOtpVerified\", null) === null ||\r\n      isEmpty(get(userDetails, \"userId\", \"\")) === true\r\n    ) {\r\n      navigate(\"/signup\");\r\n    }\r\n  });\r\n\r\n  const handleChange = (code) => {\r\n    setOtpCode(code);\r\n  };\r\n\r\n  const handleSubmitOtp = async () => {\r\n    if (otpCode.length === 6) {\r\n      setErorrAlert(false);\r\n\r\n      const userOtpData = {\r\n        userId: get(userDetails, \"userId\", \"\"),\r\n        otp: otpCode,\r\n      };\r\n\r\n      const res = await dispatch(postOtpVerification(userOtpData))\r\n        .unwrap()\r\n        .then((result) => {\r\n          if (\r\n            get(result, \"status\", false) &&\r\n            get(result, \"data.token\", \"\") !== \"\"\r\n          ) {\r\n            const userData = {\r\n              email: get(userDetails, \"email\"),\r\n              token: get(result, \"data.token\"),\r\n            };\r\n            setCookie(\"consultant_data\", userData, {\r\n              path: \"/\",\r\n              expires: expireTime,\r\n            });\r\n            dispatch(setAuthToken(result.data.token));\r\n            dispatch(setIsLoggedIn(true));\r\n            navigate(\"/consultant-info\");\r\n            setOtpCode(\"\");\r\n          } else {\r\n            toast.error(result.message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"OTP error=======>\", error);\r\n        });\r\n      return res;\r\n    } else {\r\n      setErorrAlert(true);\r\n    }\r\n  };\r\n\r\n  const otpResend = async () => {\r\n    if (!executeRecaptcha) {\r\n      toast.error(\"You are not Authorized\");\r\n      return;\r\n    }\r\n    const token = await executeRecaptcha(\"yourAction\");\r\n\r\n    const payload = {\r\n      email: get(userDetails, \"email\", \"\"),\r\n      googleRecaptchaToken: token,\r\n    };\r\n    const res = await dispatch(postResendOtp(payload))\r\n      .unwrap()\r\n      .then((result) => {\r\n        if (result.status) {\r\n          toast.success(result.message, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"OTP error=======>\", error);\r\n      });\r\n    return res;\r\n  };\r\n  return (\r\n    <>\r\n      <Grid item sm={9} md={10} lg={8} sx={{ mx: { md: \"0\", xs: \"auto\" } }} alignSelf=\"center\">\r\n        <Typography variant=\"h4\" align=\"center\" mb={2}>\r\n          {translate(\"common_otp_verification\")}\r\n        </Typography>\r\n        <Typography variant=\"body1\" align=\"center\">\r\n          {translate(\"common_please_enter_the_otp_sent_to_your_email\")}\r\n        </Typography>\r\n        <Typography variant=\"body1\" color=\"primary\" align=\"center\" mb={3}>\r\n          {userDetails.email}\r\n        </Typography>\r\n        <Grid container spacing={2} justifyContent=\"center\">\r\n          <Grid item xs={12}>\r\n            <OtpInput\r\n              value={otpCode}\r\n              onChange={handleChange}\r\n              numInputs={6}\r\n              separator={<span style={{ width: \"8px\" }}></span>}\r\n              isInputNum={true}\r\n              shouldAutoFocus={true}\r\n              className={ComponentStyle.otp_inputs}\r\n              containerStyle={{\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n              hasErrored={erorrAlert}\r\n              errorStyle={{ color: \"#b71c1c\", borderColor: \"#b71c1c\" }}\r\n              inputStyle={{\r\n                border: \"1px solid #CFD3DB\",\r\n                borderRadius: \"8px\",\r\n                width: \"40px\",\r\n                height: \"40px\",\r\n                fontSize: \"16px\",\r\n                color: \"#777E89\",\r\n                fontWeight: \"400\",\r\n                caretColor: \"#777E89\",\r\n                margin: \"0 auto\",\r\n              }}\r\n              focusStyle={{\r\n                border: \"1px solid #CFD3DB\",\r\n                outline: \"none\",\r\n              }}\r\n            />\r\n            {erorrAlert && (\r\n              <FormHelperText error={true} sx={{ textAlign: \"center\", mt: 1 }}>\r\n                {translate(\"common_error_all_fields_are_required\")}\r\n              </FormHelperText>\r\n            )}\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <Button\r\n              variant=\"contained\"\r\n              fullWidth\r\n              type=\"submit\"\r\n              onClick={handleSubmitOtp}\r\n            >\r\n              {translate(\"verify_otp\")}\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"body1\" align=\"center\">\r\n              {translate(\"didn't_receive_a_code\")}\r\n              <Button\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                style={{ marginLeft: \"3px\" }}\r\n                onClick={otpResend}\r\n              >\r\n                {translate(\"resend_otp\")}\r\n              </Button>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OtpVerification;\r\n","import Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport React from \"react\";\r\nimport { GoogleReCaptchaProvider } from \"react-google-recaptcha-v3\";\r\nimport ImageComponent from \"../../../components/auth/signup/ImageComponent\";\r\nimport OtpVerification from \"../../../components/auth/signup/OtpVerification\";\r\n\r\nconst OtpVerify = () => {\r\n  const GOOGLE_RECAPTCHA_KEY = process.env.REACT_APP_GOOGLE_RECAPTCHA_KEY;\r\n\r\n  return (\r\n    <Box\r\n      component=\"section\"\r\n      sx={{ py: { sm: 6.4, xs: 4 } }}\r\n      className=\"d-flex align-items-center justify-content-center w-100\"\r\n    >\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        sx={{ justifyContent: { md: \"space-between\", xs: \"center\" } }}\r\n        column={12}\r\n        px={10}\r\n      >\r\n        <Grid item lg={6} md={6}>\r\n          <GoogleReCaptchaProvider reCaptchaKey={GOOGLE_RECAPTCHA_KEY}>\r\n            <OtpVerification />\r\n          </GoogleReCaptchaProvider>\r\n        </Grid>\r\n        <Grid item lg={5} md={6}>\r\n          <ImageComponent />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default OtpVerify;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","otpCode","setOtpCode","_useState3","_useState4","erorrAlert","setErorrAlert","dispatch","useDispatch","state","useLocation","navigate","useNavigate","_useCookies","useCookies","setCookie","executeRecaptcha","useGoogleReCaptcha","userDetails","useSelector","getUserData","useEffect","get","isEmpty","handleSubmitOtp","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userOtpData","res","wrap","_context","prev","next","length","userId","otp","postOtpVerification","unwrap","then","result","userData","email","token","path","expires","expireTime","setAuthToken","data","setIsLoggedIn","toast","error","message","catch","console","log","sent","abrupt","stop","apply","arguments","otpResend","_ref2","_callee2","payload","_context2","googleRecaptchaToken","postResendOtp","status","success","position","POSITION","TOP_CENTER","_jsx","_Fragment","children","_jsxs","Grid","item","sm","md","lg","sx","mx","xs","alignSelf","Typography","variant","align","mb","translate","color","container","spacing","justifyContent","OtpInput","value","onChange","code","numInputs","separator","style","width","isInputNum","shouldAutoFocus","className","ComponentStyle","otp_inputs","containerStyle","alignItems","hasErrored","errorStyle","borderColor","inputStyle","border","borderRadius","height","fontSize","fontWeight","caretColor","margin","focusStyle","outline","FormHelperText","textAlign","mt","Button","fullWidth","type","onClick","size","marginLeft","Box","component","py","column","px","GoogleReCaptchaProvider","reCaptchaKey","process","OtpVerification","ImageComponent"],"sourceRoot":""}